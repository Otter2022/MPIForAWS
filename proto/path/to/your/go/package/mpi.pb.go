// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: mpi.proto

package _package

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define the message to be passed between nodes
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content    string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                          // The message content
	SourceRank int32  `protobuf:"varint,2,opt,name=source_rank,json=sourceRank,proto3" json:"source_rank,omitempty"` // Source node rank
	DestRank   int32  `protobuf:"varint,3,opt,name=dest_rank,json=destRank,proto3" json:"dest_rank,omitempty"`       // Destination node rank
	Tag        int32  `protobuf:"varint,4,opt,name=tag,proto3" json:"tag,omitempty"`                                 // Optional message tag
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_mpi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetSourceRank() int32 {
	if x != nil {
		return x.SourceRank
	}
	return 0
}

func (x *Message) GetDestRank() int32 {
	if x != nil {
		return x.DestRank
	}
	return 0
}

func (x *Message) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

// Define the request for sending a message
type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	mi := &file_mpi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{1}
}

func (x *SendRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// Define the response for sending a message
type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	mi := &file_mpi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{2}
}

func (x *SendResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Define the request for receiving a message
type RecvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestRank   int32 `protobuf:"varint,1,opt,name=dest_rank,json=destRank,proto3" json:"dest_rank,omitempty"`       // Destination node rank (the receiving node)
	SourceRank int32 `protobuf:"varint,2,opt,name=source_rank,json=sourceRank,proto3" json:"source_rank,omitempty"` // Source node rank (the sender)
	Tag        int32 `protobuf:"varint,3,opt,name=tag,proto3" json:"tag,omitempty"`                                 // Optional tag for filtering
}

func (x *RecvRequest) Reset() {
	*x = RecvRequest{}
	mi := &file_mpi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecvRequest) ProtoMessage() {}

func (x *RecvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecvRequest.ProtoReflect.Descriptor instead.
func (*RecvRequest) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{3}
}

func (x *RecvRequest) GetDestRank() int32 {
	if x != nil {
		return x.DestRank
	}
	return 0
}

func (x *RecvRequest) GetSourceRank() int32 {
	if x != nil {
		return x.SourceRank
	}
	return 0
}

func (x *RecvRequest) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

// Define the response for receiving a message
type RecvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RecvResponse) Reset() {
	*x = RecvResponse{}
	mi := &file_mpi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecvResponse) ProtoMessage() {}

func (x *RecvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecvResponse.ProtoReflect.Descriptor instead.
func (*RecvResponse) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{4}
}

func (x *RecvResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// Define a barrier synchronization message
type BarrierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank int32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"` // Node rank participating in the barrier
}

func (x *BarrierRequest) Reset() {
	*x = BarrierRequest{}
	mi := &file_mpi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarrierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarrierRequest) ProtoMessage() {}

func (x *BarrierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarrierRequest.ProtoReflect.Descriptor instead.
func (*BarrierRequest) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{5}
}

func (x *BarrierRequest) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type BarrierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether all nodes reached the barrier
}

func (x *BarrierResponse) Reset() {
	*x = BarrierResponse{}
	mi := &file_mpi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarrierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarrierResponse) ProtoMessage() {}

func (x *BarrierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarrierResponse.ProtoReflect.Descriptor instead.
func (*BarrierResponse) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{6}
}

func (x *BarrierResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Define a broadcast request
type BroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SourceRank int32    `protobuf:"varint,2,opt,name=source_rank,json=sourceRank,proto3" json:"source_rank,omitempty"` // Broadcasting node rank
}

func (x *BroadcastRequest) Reset() {
	*x = BroadcastRequest{}
	mi := &file_mpi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastRequest) ProtoMessage() {}

func (x *BroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastRequest.ProtoReflect.Descriptor instead.
func (*BroadcastRequest) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{7}
}

func (x *BroadcastRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *BroadcastRequest) GetSourceRank() int32 {
	if x != nil {
		return x.SourceRank
	}
	return 0
}

// Define the response for broadcast
type BroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BroadcastResponse) Reset() {
	*x = BroadcastResponse{}
	mi := &file_mpi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastResponse) ProtoMessage() {}

func (x *BroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastResponse.ProtoReflect.Descriptor instead.
func (*BroadcastResponse) Descriptor() ([]byte, []int) {
	return file_mpi_proto_rawDescGZIP(), []int{8}
}

func (x *BroadcastResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_mpi_proto protoreflect.FileDescriptor

var file_mpi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x70, 0x69,
	0x22, 0x73, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x35, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x0c,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5d, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x76, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a,
	0x0e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x22, 0x2b, 0x0a, 0x0f, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x5b, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x2d, 0x0a,
	0x11, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xd8, 0x01, 0x0a,
	0x0a, 0x4d, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x53,
	0x65, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x52, 0x65, 0x63, 0x76,
	0x12, 0x10, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x76, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x12, 0x13, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6d, 0x70, 0x69, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x70, 0x61, 0x74, 0x68, 0x2f,
	0x74, 0x6f, 0x2f, 0x79, 0x6f, 0x75, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mpi_proto_rawDescOnce sync.Once
	file_mpi_proto_rawDescData = file_mpi_proto_rawDesc
)

func file_mpi_proto_rawDescGZIP() []byte {
	file_mpi_proto_rawDescOnce.Do(func() {
		file_mpi_proto_rawDescData = protoimpl.X.CompressGZIP(file_mpi_proto_rawDescData)
	})
	return file_mpi_proto_rawDescData
}

var file_mpi_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_mpi_proto_goTypes = []any{
	(*Message)(nil),           // 0: mpi.Message
	(*SendRequest)(nil),       // 1: mpi.SendRequest
	(*SendResponse)(nil),      // 2: mpi.SendResponse
	(*RecvRequest)(nil),       // 3: mpi.RecvRequest
	(*RecvResponse)(nil),      // 4: mpi.RecvResponse
	(*BarrierRequest)(nil),    // 5: mpi.BarrierRequest
	(*BarrierResponse)(nil),   // 6: mpi.BarrierResponse
	(*BroadcastRequest)(nil),  // 7: mpi.BroadcastRequest
	(*BroadcastResponse)(nil), // 8: mpi.BroadcastResponse
}
var file_mpi_proto_depIdxs = []int32{
	0, // 0: mpi.SendRequest.message:type_name -> mpi.Message
	0, // 1: mpi.RecvResponse.message:type_name -> mpi.Message
	0, // 2: mpi.BroadcastRequest.message:type_name -> mpi.Message
	1, // 3: mpi.MPIService.Send:input_type -> mpi.SendRequest
	3, // 4: mpi.MPIService.Recv:input_type -> mpi.RecvRequest
	5, // 5: mpi.MPIService.Barrier:input_type -> mpi.BarrierRequest
	7, // 6: mpi.MPIService.Broadcast:input_type -> mpi.BroadcastRequest
	2, // 7: mpi.MPIService.Send:output_type -> mpi.SendResponse
	4, // 8: mpi.MPIService.Recv:output_type -> mpi.RecvResponse
	6, // 9: mpi.MPIService.Barrier:output_type -> mpi.BarrierResponse
	8, // 10: mpi.MPIService.Broadcast:output_type -> mpi.BroadcastResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mpi_proto_init() }
func file_mpi_proto_init() {
	if File_mpi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mpi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mpi_proto_goTypes,
		DependencyIndexes: file_mpi_proto_depIdxs,
		MessageInfos:      file_mpi_proto_msgTypes,
	}.Build()
	File_mpi_proto = out.File
	file_mpi_proto_rawDesc = nil
	file_mpi_proto_goTypes = nil
	file_mpi_proto_depIdxs = nil
}
